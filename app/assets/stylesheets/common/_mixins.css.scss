
/*=== Basic
==============================================================================================*/
@mixin truncate-line {
  white-space: nowrap;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}


/*=== Float
==============================================================================================*/
@mixin float($selector: ">*", $margin: null, $direction: left, $width: null) {
  @extend .clear-after;

  #{$selector} {
    margin-#{$direction}: $margin;
    display: block;
    float: $direction;

    &:first-child {
      margin-#{$direction}: 0;
    }

    @if length($width) < 2 {
      width: $width;
    }
    @else {
      $s: "&:first-child";

      @for $i from 1 through length($width) {
        @if $i > 1 {
          $s: $s + "+*";
        }
        #{$s} {
          width: nth($width, $i);
        }
      }
    }
  }
}


/*=== Arrow
==============================================================================================*/
@mixin arrow($side, $size, $color, $x: 0, $y: 0) {
  $side: opposite($side);

  display: block;
  position: absolute;
  @if $x != none {
    @if $side == left {
      margin-right: -$size;
      right: $x;
    }
    @else {
      margin-left: -$size;
      left: $x;
    }
  }
  @if $y != none {
    top: $y;
  }
  @include size(0, 0);
  border: $size solid transparent;
  border-#{$side}-color: $color;
}


/*=== Keyframes
==============================================================================================*/
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}


/*=== Opposite
==============================================================================================*/
@function opposite($side) {
  $oppo: right;

  @if $side == top {
    $oppo: bottom;
  }
  @else if $side == right {
    $oppo: left;
  }
  @else if $side == bottom {
    $oppo: top;
  }

  @return $oppo;
}

